{
	"compiler": {
		"version": "0.4.24+commit.e67f0147"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [],
				"name": "hasInitialized",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "KERNEL_APP_ID",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "APP_ADDR_NAMESPACE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getRecoveryVault",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_appId",
						"type": "bytes32"
					},
					{
						"name": "_appBase",
						"type": "address"
					},
					{
						"name": "_initializePayload",
						"type": "bytes"
					},
					{
						"name": "_setDefault",
						"type": "bool"
					}
				],
				"name": "newAppInstance",
				"outputs": [
					{
						"name": "appProxy",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "bytes32"
					},
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "apps",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_baseAcl",
						"type": "address"
					},
					{
						"name": "_permissionsCreator",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "CORE_NAMESPACE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "token",
						"type": "address"
					}
				],
				"name": "allowRecoverability",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_appId",
						"type": "bytes32"
					},
					{
						"name": "_appBase",
						"type": "address"
					}
				],
				"name": "newAppInstance",
				"outputs": [
					{
						"name": "appProxy",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "recoveryVaultAppId",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getInitializationBlock",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_recoveryVaultAppId",
						"type": "bytes32"
					}
				],
				"name": "setRecoveryVaultAppId",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "APP_MANAGER_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_appId",
						"type": "bytes32"
					},
					{
						"name": "_appBase",
						"type": "address"
					}
				],
				"name": "newPinnedAppInstance",
				"outputs": [
					{
						"name": "appProxy",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "transferToVault",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_namespace",
						"type": "bytes32"
					},
					{
						"name": "_appId",
						"type": "bytes32"
					},
					{
						"name": "_app",
						"type": "address"
					}
				],
				"name": "setApp",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_namespace",
						"type": "bytes32"
					},
					{
						"name": "_appId",
						"type": "bytes32"
					}
				],
				"name": "getApp",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_appId",
						"type": "bytes32"
					},
					{
						"name": "_appBase",
						"type": "address"
					},
					{
						"name": "_initializePayload",
						"type": "bytes"
					},
					{
						"name": "_setDefault",
						"type": "bool"
					}
				],
				"name": "newPinnedAppInstance",
				"outputs": [
					{
						"name": "appProxy",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_kernel",
						"type": "address"
					},
					{
						"name": "_appId",
						"type": "bytes32"
					},
					{
						"name": "_initializePayload",
						"type": "bytes"
					}
				],
				"name": "newAppProxyPinned",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "APP_BASES_NAMESPACE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "acl",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isPetrified",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_kernel",
						"type": "address"
					},
					{
						"name": "_appId",
						"type": "bytes32"
					}
				],
				"name": "newAppProxy",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "DEFAULT_ACL_APP_ID",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_kernel",
						"type": "address"
					},
					{
						"name": "_appId",
						"type": "bytes32"
					},
					{
						"name": "_initializePayload",
						"type": "bytes"
					}
				],
				"name": "newAppProxy",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_who",
						"type": "address"
					},
					{
						"name": "_where",
						"type": "address"
					},
					{
						"name": "_what",
						"type": "bytes32"
					},
					{
						"name": "_how",
						"type": "bytes"
					}
				],
				"name": "hasPermission",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_kernel",
						"type": "address"
					},
					{
						"name": "_appId",
						"type": "bytes32"
					}
				],
				"name": "newAppProxyPinned",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "_shouldPetrify",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "proxy",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "isUpgradeable",
						"type": "bool"
					},
					{
						"indexed": false,
						"name": "appId",
						"type": "bytes32"
					}
				],
				"name": "NewAppProxy",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "vault",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "RecoverToVault",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "namespace",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"name": "appId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"name": "app",
						"type": "address"
					}
				],
				"name": "SetApp",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"acl()": {
					"details": "Get the installed ACL app",
					"return": "ACL app"
				},
				"allowRecoverability(address)": {
					"details": "By default deriving from AragonApp makes it recoverable",
					"params": {
						"token": "Token address that would be recovered"
					},
					"return": "bool whether the app allows the recovery"
				},
				"getApp(bytes32,bytes32)": {
					"details": "Get the address of an app instance or base implementation",
					"params": {
						"_appId": "Identifier for app",
						"_namespace": "App namespace to use"
					},
					"return": "Address of the app"
				},
				"getInitializationBlock()": {
					"return": "Block number in which the contract was initialized"
				},
				"getRecoveryVault()": {
					"details": "Get the address of the recovery Vault instance (to recover funds)",
					"return": "Address of the Vault"
				},
				"hasInitialized()": {
					"return": "Whether the contract has been initialized by the time of the current block"
				},
				"hasPermission(address,address,bytes32,bytes)": {
					"details": "Function called by apps to check ACL on kernel or to check permission status",
					"params": {
						"_how": "Extra data for ACL auth",
						"_what": "Identifier for a group of actions in app",
						"_where": "Address of the app",
						"_who": "Sender of the original call"
					},
					"return": "Boolean indicating whether the ACL allows the role or not.        Always returns false if the kernel hasn't been initialized yet."
				},
				"initialize(address,address)": {
					"details": "Initialize can only be called once. It saves the block number in which it was initialized.",
					"params": {
						"_baseAcl": "Address of base ACL app",
						"_permissionsCreator": "Entity that will be given permission over createPermission"
					}
				},
				"newAppInstance(bytes32,address)": {
					"details": "Create a new instance of an app linked to this kernel",
					"params": {
						"_appBase": "Address of the app's base implementation",
						"_appId": "Identifier for app"
					},
					"return": "AppProxy instance"
				},
				"newAppInstance(bytes32,address,bytes,bool)": {
					"details": "Create a new instance of an app linked to this kernel and set its base     implementation if it was not already set",
					"params": {
						"_appBase": "Address of the app's base implementation",
						"_appId": "Identifier for app",
						"_initializePayload": "Payload for call made by the proxy during its construction to initialize",
						"_setDefault": "Whether the app proxy app is the default one.       Useful when the Kernel needs to know of an instance of a particular app,       like Vault for escape hatch mechanism."
					},
					"return": "AppProxy instance"
				},
				"newAppProxy(address,bytes32)": {
					"params": {
						"_appId": "Identifier for app",
						"_kernel": "App's Kernel reference"
					},
					"return": "AppProxyUpgradeable"
				},
				"newAppProxy(address,bytes32,bytes)": {
					"params": {
						"_appId": "Identifier for app",
						"_kernel": "App's Kernel reference"
					},
					"return": "AppProxyUpgradeable"
				},
				"newAppProxyPinned(address,bytes32)": {
					"params": {
						"_appId": "Identifier for app",
						"_kernel": "App's Kernel reference"
					},
					"return": "AppProxyPinned"
				},
				"newAppProxyPinned(address,bytes32,bytes)": {
					"params": {
						"_appId": "Identifier for app",
						"_initializePayload": "Proxy initialization payload",
						"_kernel": "App's Kernel reference"
					},
					"return": "AppProxyPinned"
				},
				"newPinnedAppInstance(bytes32,address)": {
					"details": "Create a new pinned instance of an app linked to this kernel",
					"params": {
						"_appBase": "Address of the app's base implementation",
						"_appId": "Identifier for app"
					},
					"return": "AppProxy instance"
				},
				"newPinnedAppInstance(bytes32,address,bytes,bool)": {
					"details": "Create a new pinned instance of an app linked to this kernel and set     its base implementation if it was not already set",
					"params": {
						"_appBase": "Address of the app's base implementation",
						"_appId": "Identifier for app",
						"_initializePayload": "Payload for call made by the proxy during its construction to initialize",
						"_setDefault": "Whether the app proxy app is the default one.       Useful when the Kernel needs to know of an instance of a particular app,       like Vault for escape hatch mechanism."
					},
					"return": "AppProxy instance"
				},
				"setApp(bytes32,bytes32,address)": {
					"details": "Set the resolving address of an app instance or base implementation",
					"params": {
						"_app": "Address of the app instance or base implementation",
						"_appId": "Identifier for app",
						"_namespace": "App namespace to use"
					},
					"return": "ID of app"
				},
				"setRecoveryVaultAppId(bytes32)": {
					"details": "Set the default vault id for the escape hatch mechanism",
					"params": {
						"_recoveryVaultAppId": "Identifier of the recovery vault app"
					}
				},
				"transferToVault(address)": {
					"params": {
						"_token": "Token balance to be sent to recovery vault."
					}
				}
			}
		},
		"userdoc": {
			"methods": {
				"initialize(address,address)": {
					"notice": "Initialize this kernel instance along with its ACL and set `_permissionsCreator` as the entity that can create other permissions"
				},
				"newAppInstance(bytes32,address)": {
					"notice": "Create a new upgradeable instance of `_appId` app linked to the Kernel, setting its code to `_appBase`"
				},
				"newAppInstance(bytes32,address,bytes,bool)": {
					"notice": "Create a new upgradeable instance of `_appId` app linked to the Kernel, setting its code to `_appBase`. `_setDefault ? 'Also sets it as the default app instance.':''`"
				},
				"newAppProxy(address,bytes32)": {
					"notice": "Create a new upgradeable app instance on `_kernel` with identifier `_appId`"
				},
				"newAppProxy(address,bytes32,bytes)": {
					"notice": "Create a new upgradeable app instance on `_kernel` with identifier `_appId` and initialization payload `_initializePayload`"
				},
				"newAppProxyPinned(address,bytes32)": {
					"notice": "Create a new pinned app instance on `_kernel` with identifier `_appId`"
				},
				"newAppProxyPinned(address,bytes32,bytes)": {
					"notice": "Create a new pinned app instance on `_kernel` with identifier `_appId` and initialization payload `_initializePayload`"
				},
				"newPinnedAppInstance(bytes32,address)": {
					"notice": "Create a new non-upgradeable instance of `_appId` app linked to the Kernel, setting its code to `_appBase`."
				},
				"newPinnedAppInstance(bytes32,address,bytes,bool)": {
					"notice": "Create a new non-upgradeable instance of `_appId` app linked to the Kernel, setting its code to `_appBase`. `_setDefault ? 'Also sets it as the default app instance.':''`"
				},
				"setApp(bytes32,bytes32,address)": {
					"notice": "Set the resolving address of `_appId` in namespace `_namespace` to `_app`"
				},
				"transferToVault(address)": {
					"notice": "Send funds to recovery Vault. This contract should never receive funds,        but in case it does, this function allows one to recover them."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/npm/@aragon/os/contracts/kernel/Kernel.sol": "Kernel"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": true,
			"runs": 20000
		},
		"remappings": []
	},
	"sources": {
		".deps/npm/@aragon/os/contracts/acl/ACLSyntaxSugar.sol": {
			"keccak256": "0x672a96975fc17f66905e775645cc93249426ce9601aef597a13d1e449c7f89d0",
			"urls": [
				"bzzr://38113946d1a2270e1283cc82535a70763506c495aafd9ab5659695335028db12"
			]
		},
		".deps/npm/@aragon/os/contracts/acl/IACL.sol": {
			"keccak256": "0x7e081f42891bbcc8fa9f3a67efb34ecafa8e2c075e37a01d74d221c45ddfdd10",
			"urls": [
				"bzzr://6b8740d151668474650eb976b8b2ca50206e9a8948c524104b6a73f905a54e5c"
			]
		},
		".deps/npm/@aragon/os/contracts/apps/AppProxyBase.sol": {
			"keccak256": "0x6d591412d30dc3d5079f8c5cab04f83ad44be376a9e4143d4a3b2067cd7a4483",
			"urls": [
				"bzzr://fa928f595ac4de05bb78303e1e6ee186331d10602dbb8bc56c23c9761584a26b"
			]
		},
		".deps/npm/@aragon/os/contracts/apps/AppProxyPinned.sol": {
			"keccak256": "0xbe6285bcc237c696e297948be02cfad8d48812ba52d67f8947b52c0546da53b1",
			"urls": [
				"bzzr://217ba70dd30d05d654c4537fce1d353e7e751ba44fea487559f60aa69f9f255f"
			]
		},
		".deps/npm/@aragon/os/contracts/apps/AppProxyUpgradeable.sol": {
			"keccak256": "0xbcc626f70099c7e859b9c2bb8ca91e72b84f9e6783f91277e40737d51bd2c433",
			"urls": [
				"bzzr://b4467e610b0a9d79c703c4ff711a1acce11dea6d33b79298734ef8ecc1c71728"
			]
		},
		".deps/npm/@aragon/os/contracts/apps/AppStorage.sol": {
			"keccak256": "0x37324058906601970b1ef5cbe8f2af93144d3b723c2a33e468142cdc753c829b",
			"urls": [
				"bzzr://34fb87a94cc2e91577ee2700706d69f2380184930fa6cf3a1bcd77ee6db3d2cc"
			]
		},
		".deps/npm/@aragon/os/contracts/common/ConversionHelpers.sol": {
			"keccak256": "0x9872383d458352f5c68fa5afd1fc84ab6b172cbee33359cfa57655b8eda92416",
			"urls": [
				"bzzr://4636d13fecb497561ff5a2c54bb936a0339308bffa4e71a988b8ce00dcc249f3"
			]
		},
		".deps/npm/@aragon/os/contracts/common/DelegateProxy.sol": {
			"keccak256": "0x381a4ab9b57abf496b337146a52d533aaf6a8247941fbc19735cbde0e891e85b",
			"urls": [
				"bzzr://f7457df0e3f0ec11cb66a6b90017299fbb4ea1129ec88739af56682032f95c02"
			]
		},
		".deps/npm/@aragon/os/contracts/common/DepositableDelegateProxy.sol": {
			"keccak256": "0x80a08f88ca7051a248c6fd91283fef4b01b241d1dc97e13499f1460093ff3068",
			"urls": [
				"bzzr://5b130a1a8a655a0c1cb184ed7857bd68ace262d4904d2ed3f94b660721074f11"
			]
		},
		".deps/npm/@aragon/os/contracts/common/DepositableStorage.sol": {
			"keccak256": "0x67e1884ba4c91de1c6fe1fc2c1c632c29ed3e7894a434c049be9f1ed80539237",
			"urls": [
				"bzzr://94f42ad7b57e419a62b9505affe5d4b17e8a139bfc5c26ec3c17ed6572589a1a"
			]
		},
		".deps/npm/@aragon/os/contracts/common/EtherTokenConstant.sol": {
			"keccak256": "0x6b2fa091968161075154a77fa741a3484c891d73cd3cd14ede502ff56dd08dfc",
			"urls": [
				"bzzr://b2c4abc0b256f0127cede810517c8c5d80d191d28d160d2e1a1a2707eb6dc6da"
			]
		},
		".deps/npm/@aragon/os/contracts/common/IVaultRecoverable.sol": {
			"keccak256": "0xa8e004decf086e817a864b485473b687c2c468c82af7b5011d9908586f7cbf36",
			"urls": [
				"bzzr://ff0028441b4a0d7dddccdd7df5bad37fc0fa6eabb07f94302b673cb971c4bcf1"
			]
		},
		".deps/npm/@aragon/os/contracts/common/Initializable.sol": {
			"keccak256": "0xc859366d3143499d1458ea55cb5374ae1ca1faf41763cad5e051dea2da373ba1",
			"urls": [
				"bzzr://8654c49806681deba0f245832394b13970e6d8163de4090e65c565619dc0d3b5"
			]
		},
		".deps/npm/@aragon/os/contracts/common/IsContract.sol": {
			"keccak256": "0x9dd99d770a5eed901ba749e1f02e4fae443e71e899f4909f56825dfc378da089",
			"urls": [
				"bzzr://8266685a89948ac1c1f1d760515c4abbae1b3f5618b03148d318f1cd3780049e"
			]
		},
		".deps/npm/@aragon/os/contracts/common/Petrifiable.sol": {
			"keccak256": "0x797d3a58b782032f6afc51725326c0b51dceb00f3af6b85b25bd91cc10d22504",
			"urls": [
				"bzzr://9b9b7a635630b71c74447a7d4e3246aace9585b450d7981308da3b195374ddc2"
			]
		},
		".deps/npm/@aragon/os/contracts/common/SafeERC20.sol": {
			"keccak256": "0xd251a1207e1faa4c41500bf927310bb739b1fbc0bf880f236f8e0a9236d6a03a",
			"urls": [
				"bzzr://b2d0f5981950b4e90eaee65c85050ac4f86a79f579f4ef38e6b281c0de980b2b"
			]
		},
		".deps/npm/@aragon/os/contracts/common/TimeHelpers.sol": {
			"keccak256": "0xfaba85207f0bb4bb5d7b6685a963c39a3258641bda6e523175640c3f9aeb2045",
			"urls": [
				"bzzr://709b5e54b8c4cabb5ec944c817f133076e3631cf009b36886c1725326b9fe92f"
			]
		},
		".deps/npm/@aragon/os/contracts/common/Uint256Helpers.sol": {
			"keccak256": "0x83033025a3f4402be3b7bcc9a23ce96ae4fadc7f251da8f139d73a13a3400b0c",
			"urls": [
				"bzzr://bd0e059eff36a66c3a28298ed5a2e1b058ce93057866ab36063e9f3095cef36f"
			]
		},
		".deps/npm/@aragon/os/contracts/common/UnstructuredStorage.sol": {
			"keccak256": "0xe497dcb85bbbf10224623247f39a4aeed7d3b230de2a811f3b69cb0e7d0a64d4",
			"urls": [
				"bzzr://8c619ede2c79a61baf84f9018ecebd86658ed8e26805141a53dec092e5e9a986"
			]
		},
		".deps/npm/@aragon/os/contracts/common/VaultRecoverable.sol": {
			"keccak256": "0xea4ded621a63f988b83ac27b4a23cad0a42c3d77bcf6ca7b88681ae4ea650cf4",
			"urls": [
				"bzzr://72e27dc718c124aaf13418a5c68a24248b6b7697aa6fe0585decac3686e12e3a"
			]
		},
		".deps/npm/@aragon/os/contracts/factory/AppProxyFactory.sol": {
			"keccak256": "0x94e88f4e8747be9487e32069eb22c1455ffc49cfd1299ef1eba212049c2db115",
			"urls": [
				"bzzr://b4e9f5de68841156d93b92e55ef031762a2a273215b19190d93cac86b1776ea4"
			]
		},
		".deps/npm/@aragon/os/contracts/kernel/IKernel.sol": {
			"keccak256": "0x96e9fd607b156a96905ec0108bb4fbcc5ad85212bb98e03600069bb5727d2daa",
			"urls": [
				"bzzr://f38a550aa902b14515a3223620de8f7961d3ec94b37ac10632f3a1f360476bb4"
			]
		},
		".deps/npm/@aragon/os/contracts/kernel/Kernel.sol": {
			"keccak256": "0x117b1e169c984a4ad9070d5d7784bf91f8b1b16d3e695694cde253181b5ade3e",
			"urls": [
				"bzzr://1b5c68c03da122c98cdf6d36c5a26309bb0199afc9790fa5fa6c2311be46875b"
			]
		},
		".deps/npm/@aragon/os/contracts/kernel/KernelConstants.sol": {
			"keccak256": "0x817f66cfc7bfafd19a4e6b1344850c5f7b72e39a1073fe862efebe608a07c0d3",
			"urls": [
				"bzzr://0a16040bc7a9dff4e7e411c850565f11ec0ca65b5e170527a9f47c92ddbb110d"
			]
		},
		".deps/npm/@aragon/os/contracts/kernel/KernelStorage.sol": {
			"keccak256": "0x682eac86f7a617281098c15cadbaeec72a50cbe49101861a1454519df1718a4c",
			"urls": [
				"bzzr://f988478fa117c50841e0ecebb437b5bce214c3965de387e248e72f3266e86be5"
			]
		},
		".deps/npm/@aragon/os/contracts/lib/misc/ERCProxy.sol": {
			"keccak256": "0xa976d3230857b541c68222d1dc50d8805c598897ae959f7b2d2ab5df35d85ae2",
			"urls": [
				"bzzr://7d864f5fae04ca8c08c6ae1a9dbb6875c8bd892fb6ab03cdf24d404604c386fb"
			]
		},
		".deps/npm/@aragon/os/contracts/lib/token/ERC20.sol": {
			"keccak256": "0xa2e319fde92f9e70912f09bf6e99bbf8b9b798961d54ffcba59d347d37bde1b7",
			"urls": [
				"bzzr://8c9a4aec8e185884f26ffb125975bd52c2363359b9adff481649c59cfe15660f"
			]
		}
	},
	"version": 1
}