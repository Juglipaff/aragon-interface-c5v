{
	"compiler": {
		"version": "0.4.24+commit.e67f0147"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_spender",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "creationBlock",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_from",
						"type": "address"
					},
					{
						"name": "_to",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "holders",
				"outputs": [
					{
						"name": "holder",
						"type": "address"
					},
					{
						"name": "name",
						"type": "string"
					},
					{
						"name": "position",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"name": "",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newController",
						"type": "address"
					}
				],
				"name": "changeController",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_owner",
						"type": "address"
					},
					{
						"name": "_blockNumber",
						"type": "uint256"
					}
				],
				"name": "balanceOfAt",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "version",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_cloneTokenName",
						"type": "string"
					},
					{
						"name": "_cloneDecimalUnits",
						"type": "uint8"
					},
					{
						"name": "_cloneTokenSymbol",
						"type": "string"
					},
					{
						"name": "_snapshotBlock",
						"type": "uint256"
					},
					{
						"name": "_transfersEnabled",
						"type": "bool"
					}
				],
				"name": "createCloneToken",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"name": "balance",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_holder",
						"type": "address"
					},
					{
						"name": "_name",
						"type": "string"
					}
				],
				"name": "assignName",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "parentToken",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_owner",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "generateTokens",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getTokenHolders",
				"outputs": [
					{
						"components": [
							{
								"name": "holder",
								"type": "address"
							},
							{
								"name": "name",
								"type": "string"
							},
							{
								"name": "position",
								"type": "string"
							}
						],
						"name": "",
						"type": "tuple[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_blockNumber",
						"type": "uint256"
					}
				],
				"name": "totalSupplyAt",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_to",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "transfersEnabled",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "parentSnapShotBlock",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_spender",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					},
					{
						"name": "_extraData",
						"type": "bytes"
					}
				],
				"name": "approveAndCall",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_holder",
						"type": "address"
					},
					{
						"name": "_position",
						"type": "string"
					}
				],
				"name": "assignPosition",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_owner",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "destroyTokens",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getHoldersLength",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_owner",
						"type": "address"
					},
					{
						"name": "_spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"name": "remaining",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "claimTokens",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "tokenFactory",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "holderIndex",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_transfersEnabled",
						"type": "bool"
					}
				],
				"name": "enableTransfers",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "controller",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "_tokenFactory",
						"type": "address"
					},
					{
						"name": "_parentToken",
						"type": "address"
					},
					{
						"name": "_parentSnapShotBlock",
						"type": "uint256"
					},
					{
						"name": "_tokenName",
						"type": "string"
					},
					{
						"name": "_decimalUnits",
						"type": "uint8"
					},
					{
						"name": "_tokenSymbol",
						"type": "string"
					},
					{
						"name": "_transfersEnabled",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "_controller",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "ClaimedTokens",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_cloneToken",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_snapshotBlock",
						"type": "uint256"
					}
				],
				"name": "NewCloneToken",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_owner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "_spender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"allowance(address,address)": {
					"details": "This function makes it easy to read the `allowed[]` map",
					"params": {
						"_owner": "The address of the account that owns the token",
						"_spender": "The address of the account able to transfer the tokens"
					},
					"return": "Amount of remaining tokens of _owner that _spender is allowed  to spend"
				},
				"approve(address,uint256)": {
					"params": {
						"_amount": "The amount of tokens to be approved for transfer",
						"_spender": "The address of the account able to transfer the tokens"
					},
					"return": "True if the approval was successful"
				},
				"approveAndCall(address,uint256,bytes)": {
					"params": {
						"_amount": "The amount of tokens to be approved for transfer",
						"_spender": "The address of the contract able to transfer the tokens"
					},
					"return": "True if the function call was successful"
				},
				"balanceOf(address)": {
					"params": {
						"_owner": "The address that's balance is being requested"
					},
					"return": "The balance of `_owner` at the current block"
				},
				"balanceOfAt(address,uint256)": {
					"details": "Queries the balance of `_owner` at a specific `_blockNumber`",
					"params": {
						"_blockNumber": "The block number when the balance is queried",
						"_owner": "The address from which the balance will be retrieved"
					},
					"return": "The balance at `_blockNumber`"
				},
				"changeController(address)": {
					"params": {
						"_newController": "The new controller of the contract"
					}
				},
				"claimTokens(address)": {
					"params": {
						"_token": "The address of the token contract that you want to recover  set to 0 in case you want to extract ether."
					}
				},
				"createCloneToken(string,uint8,string,uint256,bool)": {
					"params": {
						"_cloneDecimalUnits": "Number of decimals of the smallest unit",
						"_cloneTokenName": "Name of the clone token",
						"_cloneTokenSymbol": "Symbol of the clone token",
						"_snapshotBlock": "Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used",
						"_transfersEnabled": "True if transfers are allowed in the clone"
					},
					"return": "The address of the new MiniMeToken Contract"
				},
				"destroyTokens(address,uint256)": {
					"params": {
						"_amount": "The quantity of tokens to burn",
						"_owner": "The address that will lose the tokens"
					},
					"return": "True if the tokens are burned correctly"
				},
				"enableTransfers(bool)": {
					"params": {
						"_transfersEnabled": "True if transfers are allowed in the clone"
					}
				},
				"generateTokens(address,uint256)": {
					"params": {
						"_amount": "The quantity of tokens generated",
						"_owner": "The address that will be assigned the new tokens"
					},
					"return": "True if the tokens are generated correctly"
				},
				"totalSupply()": {
					"details": "This function makes it easy to get the total number of tokens",
					"return": "The total number of tokens"
				},
				"totalSupplyAt(uint256)": {
					"params": {
						"_blockNumber": "The block number when the totalSupply is queried"
					},
					"return": "The total amount of tokens at `_blockNumber`"
				},
				"transfer(address,uint256)": {
					"params": {
						"_amount": "The amount of tokens to be transferred",
						"_to": "The address of the recipient"
					},
					"return": "Whether the transfer was successful or not"
				},
				"transferFrom(address,address,uint256)": {
					"params": {
						"_amount": "The amount of tokens to be transferred",
						"_from": "The address holding the tokens being transferred",
						"_to": "The address of the recipient"
					},
					"return": "True if the transfer was successful"
				}
			}
		},
		"userdoc": {
			"methods": {
				"approve(address,uint256)": {
					"notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer"
				},
				"approveAndCall(address,uint256,bytes)": {
					"notice": "`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two"
				},
				"balanceOfAt(address,uint256)": {
					"notice": "/////////////"
				},
				"changeController(address)": {
					"notice": "Changes the controller of the contract"
				},
				"claimTokens(address)": {
					"notice": "///////This method can be used by the controller to extract mistakenly  sent tokens to this contract."
				},
				"createCloneToken(string,uint8,string,uint256,bool)": {
					"notice": "/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`"
				},
				"destroyTokens(address,uint256)": {
					"notice": "Burns `_amount` tokens from `_owner`"
				},
				"enableTransfers(bool)": {
					"notice": "/////////////Enables token holders to transfer their tokens freely if true"
				},
				"generateTokens(address,uint256)": {
					"notice": "/////////////Generates `_amount` tokens that are assigned to `_owner`"
				},
				"totalSupplyAt(uint256)": {
					"notice": "Total amount of tokens at a specific `_blockNumber`."
				},
				"transfer(address,uint256)": {
					"notice": "////////////////Send `_amount` tokens to `_to` from `msg.sender`"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`"
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/npm/@aragon/apps-shared-minime/contracts/MiniMeToken.sol": "MiniMeToken"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": true,
			"runs": 20000
		},
		"remappings": []
	},
	"sources": {
		".deps/npm/@aragon/apps-shared-minime/contracts/ITokenController.sol": {
			"keccak256": "0x030d1ea5543fd23d3c962cbf34b1c3b6e15d9bbfb711416e1cf4160c3bcdccaa",
			"urls": [
				"bzzr://64ccd0852c1b90d55248f9b56898854c32bd881a9eb61637d6ecb7430a77764c"
			]
		},
		".deps/npm/@aragon/apps-shared-minime/contracts/MiniMeToken.sol": {
			"keccak256": "0xdd0f6c4ad5316758428e6c3a87eb59651d51c4c828f5aa0c34d243c924244f7d",
			"urls": [
				"bzzr://150c21a6b2fcbd9d68a8d46659b2b454034c79777dae282fe7bfcb6c7dc01030"
			]
		}
	},
	"version": 1
}