{
	"compiler": {
		"version": "0.4.24+commit.e67f0147"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [],
				"name": "ADD_PROTECTED_TOKEN_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "hasInitialized",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "ERC1271_INTERFACE_ID",
				"outputs": [
					{
						"name": "",
						"type": "bytes4"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_operator",
						"type": "address"
					},
					{
						"name": "_from",
						"type": "address"
					},
					{
						"name": "_tokenId",
						"type": "uint256"
					},
					{
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"name": "",
						"type": "bytes4"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_hash",
						"type": "bytes32"
					},
					{
						"name": "_signature",
						"type": "bytes"
					}
				],
				"name": "isValidSignature",
				"outputs": [
					{
						"name": "",
						"type": "bytes4"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "ERC1271_RETURN_INVALID_SIGNATURE",
				"outputs": [
					{
						"name": "",
						"type": "bytes4"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "TRANSFER_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_data",
						"type": "bytes"
					},
					{
						"name": "_signature",
						"type": "bytes"
					}
				],
				"name": "isValidSignature",
				"outputs": [
					{
						"name": "",
						"type": "bytes4"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getProtectedTokensLength",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_script",
						"type": "bytes"
					}
				],
				"name": "getEVMScriptExecutor",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getRecoveryVault",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "RUN_SCRIPT_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "SAFE_EXECUTE_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "REMOVE_PROTECTED_TOKEN_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isDepositable",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_hash",
						"type": "bytes32"
					}
				],
				"name": "presignHash",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "DESIGNATE_SIGNER_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "removeProtectedToken",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "EXECUTE_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "addProtectedToken",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "allowRecoverability",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "appId",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "protectedTokens",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getInitializationBlock",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "ERC1271_RETURN_VALID_SIGNATURE",
				"outputs": [
					{
						"name": "",
						"type": "bytes4"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "transferToVault",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_sender",
						"type": "address"
					},
					{
						"name": "_role",
						"type": "bytes32"
					},
					{
						"name": "_params",
						"type": "uint256[]"
					}
				],
				"name": "canPerform",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getEVMScriptRegistry",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_designatedSigner",
						"type": "address"
					}
				],
				"name": "setDesignatedSigner",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "designatedSigner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_target",
						"type": "address"
					},
					{
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeExecute",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "PROTECTED_TOKENS_CAP",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "ADD_PRESIGNED_HASH_ROLE",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "isPresigned",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_target",
						"type": "address"
					},
					{
						"name": "_ethValue",
						"type": "uint256"
					},
					{
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "execute",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_to",
						"type": "address"
					},
					{
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_sender",
						"type": "address"
					},
					{
						"name": "_evmScript",
						"type": "bytes"
					}
				],
				"name": "canForward",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "kernel",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_evmScript",
						"type": "bytes"
					}
				],
				"name": "forward",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isPetrified",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "balance",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isForwarder",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "target",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "SafeExecute",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "target",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "ethValue",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "Execute",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "token",
						"type": "address"
					}
				],
				"name": "AddProtectedToken",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "token",
						"type": "address"
					}
				],
				"name": "RemoveProtectedToken",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "PresignHash",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "oldSigner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "newSigner",
						"type": "address"
					}
				],
				"name": "SetDesignatedSigner",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "ReceiveERC721",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "VaultTransfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "VaultDeposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "executor",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "script",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "input",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "returnData",
						"type": "bytes"
					}
				],
				"name": "ScriptResult",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "vault",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "RecoverToVault",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"addProtectedToken(address)": {
					"params": {
						"_token": "Address of the token to be protected"
					}
				},
				"allowRecoverability(address)": {
					"details": "Disable recovery escape hatch, as it could be used     maliciously to transfer funds away from the vault"
				},
				"canForward(address,bytes)": {
					"details": "IForwarder interface conformance",
					"params": {
						"_sender": "Address of the account intending to forward an action"
					},
					"return": "True if the given address can run scripts, false otherwise"
				},
				"canPerform(address,bytes32,uint256[])": {
					"details": "Check whether an action can be performed by a sender for a particular role on this app",
					"params": {
						"_params": "Permission params for the role",
						"_role": "Role on this app",
						"_sender": "Sender of the call"
					},
					"return": "Boolean indicating whether the sender has the permissions to perform the action.        Always returns false if the app hasn't been initialized yet."
				},
				"deposit(address,uint256)": {
					"params": {
						"_token": "Address of the token being transferred",
						"_value": "Amount of tokens being transferred"
					}
				},
				"execute(address,uint256,bytes)": {
					"params": {
						"_data": "Calldata for the action",
						"_ethValue": "Amount of ETH from the contract that is sent with the action",
						"_target": "Address where the action is being executed"
					},
					"return": "Exits call frame forwarding the return data of the executed call (either error or success data)"
				},
				"forward(bytes)": {
					"details": "IForwarder interface conformance. Forwards any token holder action.",
					"params": {
						"_evmScript": "Script being executed"
					}
				},
				"getInitializationBlock()": {
					"return": "Block number in which the contract was initialized"
				},
				"getRecoveryVault()": {
					"details": "Get the recovery vault for the app",
					"return": "Recovery vault address for the app"
				},
				"hasInitialized()": {
					"return": "Whether the contract has been initialized by the time of the current block"
				},
				"initialize()": {
					"details": "As an AragonApp it needs to be initialized in order for roles (`auth` and `authP`) to work"
				},
				"isForwarder()": {
					"details": "IForwarder interface conformance",
					"return": "Always true"
				},
				"isValidSignature(bytes,bytes)": {
					"details": "Default behavior of `isValidSignature(bytes,bytes)`, can be overloaded for custom validation",
					"params": {
						"_data": "Arbitrary length data signed on the behalf of address(this)",
						"_signature": "Signature byte array associated with _data"
					},
					"return": "A bytes4 magic value 0x20c13b0b if the signature check passes, 0x00000000 if not    * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"
				},
				"isValidSignature(bytes32,bytes)": {
					"params": {
						"_hash": "Arbitrary length data signed on the behalf of address (this)",
						"_signature": "Signature byte array associated with _data"
					},
					"return": "The ERC-1271 magic value if the signature is valid"
				},
				"presignHash(bytes32)": {
					"params": {
						"_hash": "Hash that will be considered signed regardless of the signature checked with 'isValidSignature()'"
					}
				},
				"removeProtectedToken(address)": {
					"params": {
						"_token": "Address of the token to be unprotected"
					}
				},
				"safeExecute(address,bytes)": {
					"params": {
						"_data": "Calldata for the action",
						"_target": "Address where the action is being executed"
					},
					"return": "Exits call frame forwarding the return data of the executed call (either error or success data)"
				},
				"setDesignatedSigner(address)": {
					"params": {
						"_designatedSigner": "Address that will be able to sign messages on behalf of the app"
					}
				},
				"supportsInterface(bytes4)": {
					"details": "Implements conformance to ERC-165",
					"params": {
						"_interfaceId": "Interface bytes to check"
					},
					"return": "True if this contract supports the interface"
				},
				"transfer(address,address,uint256)": {
					"params": {
						"_to": "Address of the recipient of tokens",
						"_token": "Address of the token being transferred",
						"_value": "Amount of tokens being transferred"
					}
				},
				"transferToVault(address)": {
					"params": {
						"_token": "Token balance to be sent to recovery vault."
					}
				}
			}
		},
		"userdoc": {
			"methods": {
				"addProtectedToken(address)": {
					"notice": "Add `_token.symbol(): string` to the list of protected tokens"
				},
				"canForward(address,bytes)": {
					"notice": "Tells whether `_sender` can forward actions or not"
				},
				"deposit(address,uint256)": {
					"notice": "Deposit `_value` `_token` to the vault"
				},
				"execute(address,uint256,bytes)": {
					"notice": "Execute '`@radspec(_target, _data)`' on `_target``_ethValue == 0 ? '' : ' (Sending ' + @tokenAmount(0x0000000000000000000000000000000000000000, _ethValue) + ')'`"
				},
				"forward(bytes)": {
					"notice": "Execute the script as the Agent app"
				},
				"initialize()": {
					"notice": "Initialize Vault app"
				},
				"isForwarder()": {
					"notice": "Tells whether the Agent app is a forwarder or not"
				},
				"isValidSignature(bytes32,bytes)": {
					"notice": "Tells whether a signature is seen as valid by this contract through ERC-1271"
				},
				"presignHash(bytes32)": {
					"notice": "Pre-sign hash `_hash`"
				},
				"removeProtectedToken(address)": {
					"notice": "Remove `_token.symbol(): string` from the list of protected tokens"
				},
				"safeExecute(address,bytes)": {
					"notice": "Execute '`@radspec(_target, _data)`' on `_target`, ensuring that protected tokens can't be spent"
				},
				"setDesignatedSigner(address)": {
					"notice": "Set `_designatedSigner` as the designated signer of the app, which will be able to sign messages on behalf of the app"
				},
				"supportsInterface(bytes4)": {
					"notice": "Tells whether this contract supports a given ERC-165 interface"
				},
				"transfer(address,address,uint256)": {
					"notice": "Transfer `_value` `_token` from the Vault to `_to`"
				},
				"transferToVault(address)": {
					"notice": "Send funds to recovery Vault. This contract should never receive funds,        but in case it does, this function allows one to recover them."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			".deps/npm/@aragon/apps-agent/contracts/Agent.sol": "Agent"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": true,
			"runs": 20000
		},
		"remappings": []
	},
	"sources": {
		".deps/npm/@aragon/apps-agent/contracts/Agent.sol": {
			"keccak256": "0xd90f3ec7479a49011f6e35a1c1b85322e6d634f41f0d4bcb89023102abbd3203",
			"urls": [
				"bzzr://1d4051baf6c7b7d25e8a4e8c39744bf7bdebdc08bd565b82e7508e582263e082"
			]
		},
		".deps/npm/@aragon/apps-agent/contracts/SignatureValidator.sol": {
			"keccak256": "0x8900d75cd2ac28d3290df3aa09db7d4c89e0de0ae1598ee8bef450b22731118b",
			"urls": [
				"bzzr://e6eb49039bec302753ef25b89bcd0170575d6366312d620f9180a1d7b654ef50"
			]
		},
		".deps/npm/@aragon/apps-agent/contracts/standards/ERC1271.sol": {
			"keccak256": "0x0e0d434f9f3c740b8f94dab93af3b226dac4d40af885adbbe81ff2a4fd957fc1",
			"urls": [
				"bzzr://db2f5ca644dc5a0fd97cbe40d60bb416fc1a367cdbf663edf6defee00902b3a6"
			]
		},
		".deps/npm/@aragon/apps-agent/contracts/standards/IERC165.sol": {
			"keccak256": "0x54c5b6c1e72d3f1a3ad7212600f2a5ae39dc9d990b73d88e614b11dd58f8d7ce",
			"urls": [
				"bzzr://3bdae67ef0608dcc80e03686dc125e90195f665e4f16e7f125f47a1fb9ccb7d9"
			]
		},
		".deps/npm/@aragon/apps-agent/contracts/standards/IERC721Receiver.sol": {
			"keccak256": "0x0f80bfb9c096d9dc68a94b93038a7de0247396b09d3b10fb7a339f336d7d2f6b",
			"urls": [
				"bzzr://ff15acf481b2d6cff27a257febcce8d7d6f7aeab67cddd531d4e054744d9c1f3"
			]
		},
		"@aragon/apps-vault/contracts/Vault.sol": {
			"keccak256": "0x760b4fd895153fd398391df3b27474d1913d792fadec2172dd10d3686d3416e6",
			"urls": [
				"bzzr://319b753d448e834740429bcb046a02eef5ad0e50b60a63ada89ebd53bf1c112b"
			]
		},
		"@aragon/os/contracts/acl/ACLSyntaxSugar.sol": {
			"keccak256": "0x672a96975fc17f66905e775645cc93249426ce9601aef597a13d1e449c7f89d0",
			"urls": [
				"bzzr://38113946d1a2270e1283cc82535a70763506c495aafd9ab5659695335028db12"
			]
		},
		"@aragon/os/contracts/acl/IACL.sol": {
			"keccak256": "0x7e081f42891bbcc8fa9f3a67efb34ecafa8e2c075e37a01d74d221c45ddfdd10",
			"urls": [
				"bzzr://6b8740d151668474650eb976b8b2ca50206e9a8948c524104b6a73f905a54e5c"
			]
		},
		"@aragon/os/contracts/apps/AppStorage.sol": {
			"keccak256": "0x37324058906601970b1ef5cbe8f2af93144d3b723c2a33e468142cdc753c829b",
			"urls": [
				"bzzr://34fb87a94cc2e91577ee2700706d69f2380184930fa6cf3a1bcd77ee6db3d2cc"
			]
		},
		"@aragon/os/contracts/apps/AragonApp.sol": {
			"keccak256": "0x342fa7437cb3e80ea702209cc90787b27d21a7d4bf101e313534c9da2a2f7875",
			"urls": [
				"bzzr://6df436065b114a784bd6376345e7f0b4d72e826fcf9be86bfd662bae116d1e3a"
			]
		},
		"@aragon/os/contracts/common/Autopetrified.sol": {
			"keccak256": "0x42f0422744e13674e38bfbef079af7150883aba96ddbe61c5ae50df31d42696e",
			"urls": [
				"bzzr://b9382dd3121d3ec25686162627ed009212bbd788dfd8e852ecac07bd2a77aa15"
			]
		},
		"@aragon/os/contracts/common/ConversionHelpers.sol": {
			"keccak256": "0x9872383d458352f5c68fa5afd1fc84ab6b172cbee33359cfa57655b8eda92416",
			"urls": [
				"bzzr://4636d13fecb497561ff5a2c54bb936a0339308bffa4e71a988b8ce00dcc249f3"
			]
		},
		"@aragon/os/contracts/common/DepositableStorage.sol": {
			"keccak256": "0x67e1884ba4c91de1c6fe1fc2c1c632c29ed3e7894a434c049be9f1ed80539237",
			"urls": [
				"bzzr://94f42ad7b57e419a62b9505affe5d4b17e8a139bfc5c26ec3c17ed6572589a1a"
			]
		},
		"@aragon/os/contracts/common/EtherTokenConstant.sol": {
			"keccak256": "0x6b2fa091968161075154a77fa741a3484c891d73cd3cd14ede502ff56dd08dfc",
			"urls": [
				"bzzr://b2c4abc0b256f0127cede810517c8c5d80d191d28d160d2e1a1a2707eb6dc6da"
			]
		},
		"@aragon/os/contracts/common/IForwarder.sol": {
			"keccak256": "0x3dcf53bc3021c65b14d5af9f681b4bed524dd1c70a7d39add82166a94981f297",
			"urls": [
				"bzzr://385abfa29e4565774741854b6eb26a60282e5954d91677fc2346c1142bac1456"
			]
		},
		"@aragon/os/contracts/common/IVaultRecoverable.sol": {
			"keccak256": "0xa8e004decf086e817a864b485473b687c2c468c82af7b5011d9908586f7cbf36",
			"urls": [
				"bzzr://ff0028441b4a0d7dddccdd7df5bad37fc0fa6eabb07f94302b673cb971c4bcf1"
			]
		},
		"@aragon/os/contracts/common/Initializable.sol": {
			"keccak256": "0xc859366d3143499d1458ea55cb5374ae1ca1faf41763cad5e051dea2da373ba1",
			"urls": [
				"bzzr://8654c49806681deba0f245832394b13970e6d8163de4090e65c565619dc0d3b5"
			]
		},
		"@aragon/os/contracts/common/IsContract.sol": {
			"keccak256": "0x9dd99d770a5eed901ba749e1f02e4fae443e71e899f4909f56825dfc378da089",
			"urls": [
				"bzzr://8266685a89948ac1c1f1d760515c4abbae1b3f5618b03148d318f1cd3780049e"
			]
		},
		"@aragon/os/contracts/common/Petrifiable.sol": {
			"keccak256": "0x797d3a58b782032f6afc51725326c0b51dceb00f3af6b85b25bd91cc10d22504",
			"urls": [
				"bzzr://9b9b7a635630b71c74447a7d4e3246aace9585b450d7981308da3b195374ddc2"
			]
		},
		"@aragon/os/contracts/common/ReentrancyGuard.sol": {
			"keccak256": "0xd89653c118bbd8cace423c45daa37986c566672198a415254011c028d1831189",
			"urls": [
				"bzzr://bd5ce58e763a4ecc5cf4f4db00f6ef1f734b18cb888841e25690bff49e07c5eb"
			]
		},
		"@aragon/os/contracts/common/SafeERC20.sol": {
			"keccak256": "0xd251a1207e1faa4c41500bf927310bb739b1fbc0bf880f236f8e0a9236d6a03a",
			"urls": [
				"bzzr://b2d0f5981950b4e90eaee65c85050ac4f86a79f579f4ef38e6b281c0de980b2b"
			]
		},
		"@aragon/os/contracts/common/TimeHelpers.sol": {
			"keccak256": "0xfaba85207f0bb4bb5d7b6685a963c39a3258641bda6e523175640c3f9aeb2045",
			"urls": [
				"bzzr://709b5e54b8c4cabb5ec944c817f133076e3631cf009b36886c1725326b9fe92f"
			]
		},
		"@aragon/os/contracts/common/Uint256Helpers.sol": {
			"keccak256": "0x83033025a3f4402be3b7bcc9a23ce96ae4fadc7f251da8f139d73a13a3400b0c",
			"urls": [
				"bzzr://bd0e059eff36a66c3a28298ed5a2e1b058ce93057866ab36063e9f3095cef36f"
			]
		},
		"@aragon/os/contracts/common/UnstructuredStorage.sol": {
			"keccak256": "0xe497dcb85bbbf10224623247f39a4aeed7d3b230de2a811f3b69cb0e7d0a64d4",
			"urls": [
				"bzzr://8c619ede2c79a61baf84f9018ecebd86658ed8e26805141a53dec092e5e9a986"
			]
		},
		"@aragon/os/contracts/common/VaultRecoverable.sol": {
			"keccak256": "0xea4ded621a63f988b83ac27b4a23cad0a42c3d77bcf6ca7b88681ae4ea650cf4",
			"urls": [
				"bzzr://72e27dc718c124aaf13418a5c68a24248b6b7697aa6fe0585decac3686e12e3a"
			]
		},
		"@aragon/os/contracts/evmscript/EVMScriptRunner.sol": {
			"keccak256": "0xf8b4ccf7ee558224c155604a4a0b5cc35715367cda5010fb38e21d63ec5236c9",
			"urls": [
				"bzzr://1122441f26acb8db534b2aca2dd0190105700f3428dab3c4d46185a844f0add4"
			]
		},
		"@aragon/os/contracts/evmscript/IEVMScriptExecutor.sol": {
			"keccak256": "0x76ad18a278e36e14147f5b58a1157de67ce95f28813f3e1eacfedaaf53dd33b9",
			"urls": [
				"bzzr://9a89d458a5e70793b3ce7e49e02977c366eb8779d8414c5d375a61ceb6232b52"
			]
		},
		"@aragon/os/contracts/evmscript/IEVMScriptRegistry.sol": {
			"keccak256": "0x66b255ac1537765d6e79cc0ed02df004e7bf214863773901e207baafd59dc2ce",
			"urls": [
				"bzzr://1355e0a1cdc2fdfc5009a40920fa31e7bee0f343b29791e9239572f384283725"
			]
		},
		"@aragon/os/contracts/kernel/IKernel.sol": {
			"keccak256": "0x96e9fd607b156a96905ec0108bb4fbcc5ad85212bb98e03600069bb5727d2daa",
			"urls": [
				"bzzr://f38a550aa902b14515a3223620de8f7961d3ec94b37ac10632f3a1f360476bb4"
			]
		},
		"@aragon/os/contracts/kernel/KernelConstants.sol": {
			"keccak256": "0x817f66cfc7bfafd19a4e6b1344850c5f7b72e39a1073fe862efebe608a07c0d3",
			"urls": [
				"bzzr://0a16040bc7a9dff4e7e411c850565f11ec0ca65b5e170527a9f47c92ddbb110d"
			]
		},
		"@aragon/os/contracts/lib/token/ERC20.sol": {
			"keccak256": "0xa2e319fde92f9e70912f09bf6e99bbf8b9b798961d54ffcba59d347d37bde1b7",
			"urls": [
				"bzzr://8c9a4aec8e185884f26ffb125975bd52c2363359b9adff481649c59cfe15660f"
			]
		}
	},
	"version": 1
}